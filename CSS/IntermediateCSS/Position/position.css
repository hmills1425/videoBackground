div{
    font-size: 50px;
    padding: 20px;
}

.container{
    background-color: grey;
    margin: 20px;
/* for the Absolute positioning of child elements*/
    /* position: relative; */
}

#red{
    /* background-color: red; */

    /* Static is the default position property value for all elements */
    /* position: static; */

    /* Relative position property value allows us to move the element relative to its normal starting position with top, right, bottom, and left properties */
    position: relative;

    /* Moves the element down 50px from the top */
    /* top: 50px; */
    /* Moves the element right 50px FROM the left */
    /* left: 50px; */

    /* The Absolute position property value removes the element from the document but still displays on the screen at a specified new position. */
    /* When an element has an Absolute position property, it will position itself relative to the first parent/ancestor element with a position value other than static. Must include top, right, bottom, or left for the absolute position location to take effect (NOTE: If no parent/ancestor element with a position value other thatn static is found, then the element will position itself relative to the browser window/viewport by default) */
    /* The Absolute position property value will also change an element to an Inline element if it is not already */
    /* position: absolute; */
    /* top: 100px; */
    /* left: 150px; */

    /* The fixed position property value is like the Absolute in that it completely removes the element from the document. However,unlike Absolute it will always position itself relative to the browser window. Also, fixed will force the element to remain in the same location on the screen as you scroll. */
    /* position: fixed; */
    /* right: 100px; */
    /* bottom: 100px; */

    /* The Sticky position property is like a combination of relative and fixed. When the element hits the top of the screen (Or the set breaking point) it becomes a fixed position as your scroll and will stick to the top of the screen (Or breaking point). Also, an element with a position of Sticky is only fixed positioned while inside of its parent element. */
    position: sticky;
    /* Example of the top of the parent element */
    /* top: 0; */
    /* Example of set breaking point */
    /* top: 80px; */
}

#green{
    background-color: forestgreen;
}

#blue{
    background-color: blue;
}

#yellow{
    background-color: yellow;
    position: relative;
    top: 20px;

    /* Z-index determines whether an element will display in front or behind another or other elements (NOTE: The default z-index value for elements is auto (AKA Zero)) The element with the higher z-index will display in front of elements with a lower z-index */
    /* Z-index will NOT override a child */
    z-index: 2;
}

#purple{
    background-color: plum;
    position: relative;
    bottom: 20px;
    z-index: 1;
}

#purple:hover{
    z-index: 3;
}

#orange{
    background-color: orangered;
    position: sticky;
    top: 0;
}




